{"version":3,"sources":["Model.js","UpdateState.js","node_modules/hyperscript-helpers/dist/index.js","node_modules/browser-split/index.js","node_modules/indexof/index.js","node_modules/class-list/index.js","node_modules/hyperscript/index.js","View.js","App.js","index.js"],"names":["initModel","MSGS","ADD","SUBTRACT","updateState","msg","model","h","div","button","view","dispatch","className","onclick","app","node","currentView","appendChild","updatedView","replaceChild","rootNode","document","getElementById"],"mappings":"AGAA,AEAA,AHAA,AIAA,AFAA;ADCA,AEAA,AHAA,AIAA,AFAA;AKAA,ANCA,AEAA,AHAA,AIAA,AFAA;ADCA,AEAA,AHAA,AIAA,AFAA;AKDA,ANEA,AEAA,AHAA,AIAA,AFAA;ADCA,AEAA,AHAA,AIAA,AFAA;AJLA,ASGA,ANGA,AEAA,AHAA,AIAA,AFAA,IJNMA,SAAS,GAAG,CAAlB;AQAA,APAA,AMAA,AJOA,AEAA,AHAA,AIAA,AFAA,eJLeA;AQDf,ACGA,ANIA,AEAA,AHAA,AIAA,AFAA,SIPSc,GAAT,CAAad,SAAb,EAAwBI,WAAxB,EAAqCM,IAArC,EAA2CK,IAA3C,EAAiD;AAC/C,ADDF,AJQA,AEAA,AHAA,AIAA,AFAA,MIPMT,KAAK,GAAGN,SAAZ,CAD+C,CACzB;ALQxB,AEAA,AHAA,AIAA;AEPE,APDF,AESA,AEAA,AHAA,AIAA,ILTMC,EOCAe,EPDI,GAAG,MOCI,GAAGN,IAAI,CAACC,QAAD,EAAWL,KAAX,CAAtB;AACAS,APDAb,AQHF,ANYA,AEAA,AHAA,AIAA,EEREa,APDAb,GAAG,COCC,CAACe,APDA,KADM,MOEX,CAAiBD,WAAjB,EAH+C,CAK/C;APFAb,AQEF,ANOA,AEAA,AHAA,AIAA,ELTEA,QAAQ,AMDc,ENCZ,+BMDeI,oBAAH;ACItB,APLW,AQKb,ANOA,AEAA,AHAA,AIAA,CLZA,EAKA,CMJQC,OCIGG,GDJHH,KCIN,CAAkBH,GAAlB,EAAuB;AAAE,APC3B,AQAA,ANOA,AEAA,AHAA,AIAA,ICZaI,AEKPW,QAAQ,GAAGC,EFLJZ,MEKY,CAACa,cAAT,CAAwB,MAAxB,CAAjB;ADAIhB,APEJ,AQAA,ANMA,AEAA,AHAA,AIAA,IERIA,KAAK,GAAGF,MCERJ,KDFmB,CAACK,GAAD,EAAMC,GCE7B,EDFuB,ACERF,CDFX,mBCEJ,EAA4BM,aAA5B,EAAkCU,QAAlC;ADDI,APGJ,AMPA,AJYA,AEAA,AHAA,AIAA,ICZMnB,ICIIiB,ADJA,GAAG,QCIQ,GAAGR,IAAI,CAACC,QAAD,EAAWL,KAAX,CAAxB;AACAS,APIJ,AMREb,AJYF,AEAA,AHAA,AIAA,ECZEA,ECIEa,CDJC,EAAE,CCIC,CAACI,GDLI,SCKT,CAAkBD,WAAlB,EAA+BF,WAA/B;AACAA,APKJ,AMTEb,AJYF,AEAA,AHAA,AIAA,ECZEA,ECIEa,MDJM,EAAE,GCIG,GAAGE,WAAd;AACD,ADPU,AJeb,AEAA,AHAA,AIAA,CCfA;ACQC,APKD,AEGA,AEAA,AHAA,AIAA,SLHSd,WAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,AMTF,AJYA,AEAA,AHAA,AIAA,SCZSI,CNSCL,GAAR,AMTF,CAAcM,QAAd,EAAwBL,KAAxB,EAA+B;ANU3B,AMTF,AJYF,AEAA,AHAA,AIAA,SLHSL,AMTAO,GAAG,CNSC,AMTA,CNSCN,COLCY,EPKX;AAAe,AMTJF,AJaf,AEAA,AHAA,AIAA,ICbeA,SAAS,EAAE;ANUpB,AMVO,AJcb,AEAA,AHAA,AIAA,GCdY,EAA4B,CACpCJ,GAAG,CAAC,KNSKF,KAAK,GAAG,CAAf;AACD,AMVKM,AJcV,AEAA,AHAA,AIAA,ICdUA,SAAS,EAAE;AAAb,AJeR,AEAA,AHAA,AIAA,GCfO,qBAAqCN,KAArC,GAA8C,CAC/CE,GAAG,CAAC;ANUN,AMVQI,AJeZ,AEAA,AHAA,AIAA,ICfYA,KNUHX,IAAI,AMVQ,CNUPE,CMVS,ONUnB;AAAoB,AMVd,AJgBV,AEAA,AHAA,AIAA,GChBS,EAA6B,CAC9BM,MAAM,CAAC;ANUT,AMVWI,AJgBjB,AEAA,AHAA,AIAA,IChBiBA,OAAO,EAAE,ENUbP,KAAK,GAAG,CAAf;AACD,AMXqB,AJiB1B,AEAA,AHAA,AIAA,aCjBgCK,QAAQ,CAACV,IAAI,CAACC,GAAN,CAAd;AAAA,AJkB1B,AEAA,AHAA,AIAA;ALNI,AMZW,AJmBf,AEAA,AHAA,AIAA,GCnBc,EAAwC,GAAxC,CADwB,EAE9BO,MAAM,CAAC;ANYT,AMZWI,AJmBjB,AEAA,AHAA,AIAA,ICnBiBA,OAAO,ENYXP,AMZa,KNYpB;AARJ,AMJwB,AJoB1B,AEAA,AHAA,AIAA,aCpBgCK,QAAQ,CAACV,IAAI,CAACE,QAAN,CAAd;ANczB,AMdyB,AJqB1B,AEAA,AHAA,AIAA;ACrBe,AJsBf,AEAA,AHAA,AIAA,GCtBc,EAA6C,GAA7C,CAFwB,CAA7B,CAD4C,CAA9C,CADiC,CAA5B,CAAV;AAQD,AJmBD,AEAA,AHAA,AIAA,eLPeC;AEQf,AEAA,AHAA,AIAA;AHCA,AEAA,AHAA,AIAA,eCnBeM;AJoBffile":"counterParcel.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const initModel = 0\n\nexport default initModel","import initModel from './Model'\n\nconst MSGS = {\n  ADD: 'ADD',\n  SUBTRACT: 'SUBTRACT'\n}\n\n// functions is suuuppperrr galactic overkill here\n// do this in your todoApp\n\n// function addMsg() {\n\n//}\n\n// function subtractMsg() {\n\n//}\n\nfunction updateState(msg, model) {\n  switch (msg) {\n    case MSGS.ADD: {\n      return model + 1\n    }\n    case MSGS.SUBTRACT: {\n      return model - 1\n    }\n    default:\n      return model\n  }\n}\n\nexport default updateState\n\n\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isValidString = function isValidString(param) {\n  return typeof param === 'string' && param.length > 0;\n};\n\nvar startsWith = function startsWith(string, start) {\n  return string[0] === start;\n};\n\nvar isSelector = function isSelector(param) {\n  return isValidString(param) && (startsWith(param, '.') || startsWith(param, '#'));\n};\n\nvar node = function node(h) {\n  return function (tagName) {\n    return function (first) {\n      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (isSelector(first)) {\n        return h.apply(undefined, [tagName + first].concat(rest));\n      } else if (typeof first === 'undefined') {\n        return h(tagName);\n      } else {\n        return h.apply(undefined, [tagName, first].concat(rest));\n      }\n    };\n  };\n};\n\nvar TAG_NAMES = ['a', 'abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'b', 'base', 'basefont', 'bdi', 'bdo', 'bgsound', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command', 'content', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'image', 'img', 'input', 'ins', 'isindex', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'listing', 'main', 'map', 'mark', 'marquee', 'math', 'menu', 'menuitem', 'meta', 'meter', 'multicol', 'nav', 'nextid', 'nobr', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'plaintext', 'pre', 'progress', 'q', 'rb', 'rbc', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'shadow', 'slot', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'svg', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr', 'xmp'];\n\nexports['default'] = function (h) {\n  var createTag = node(h);\n  var exported = { TAG_NAMES: TAG_NAMES, isSelector: isSelector, createTag: createTag };\n  TAG_NAMES.forEach(function (n) {\n    exported[n] = createTag(n);\n  });\n  return exported;\n};\n\nmodule.exports = exports['default'];","/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","// contains, add, remove, toggle\nvar indexof = require('indexof')\n\nmodule.exports = ClassList\n\nfunction ClassList(elem) {\n    var cl = elem.classList\n\n    if (cl) {\n        return cl\n    }\n\n    var classList = {\n        add: add\n        , remove: remove\n        , contains: contains\n        , toggle: toggle\n        , toString: $toString\n        , length: 0\n        , item: item\n    }\n\n    return classList\n\n    function add(token) {\n        var list = getTokens()\n        if (indexof(list, token) > -1) {\n            return\n        }\n        list.push(token)\n        setTokens(list)\n    }\n\n    function remove(token) {\n        var list = getTokens()\n            , index = indexof(list, token)\n\n        if (index === -1) {\n            return\n        }\n\n        list.splice(index, 1)\n        setTokens(list)\n    }\n\n    function contains(token) {\n        return indexof(getTokens(), token) > -1\n    }\n\n    function toggle(token) {\n        if (contains(token)) {\n            remove(token)\n            return false\n        } else {\n            add(token)\n            return true\n        }\n    }\n\n    function $toString() {\n        return elem.className\n    }\n\n    function item(index) {\n        var tokens = getTokens()\n        return tokens[index] || null\n    }\n\n    function getTokens() {\n        var className = elem.className\n\n        return filter(className.split(\" \"), isTruthy)\n    }\n\n    function setTokens(list) {\n        var length = list.length\n\n        elem.className = list.join(\" \")\n        classList.length = length\n\n        for (var i = 0; i < list.length; i++) {\n            classList[i] = list[i]\n        }\n\n        delete list[length]\n    }\n}\n\nfunction filter (arr, fn) {\n    var ret = []\n    for (var i = 0; i < arr.length; i++) {\n        if (fn(arr[i])) ret.push(arr[i])\n    }\n    return ret\n}\n\nfunction isTruthy(value) {\n    return !!value\n}\n","var split = require('browser-split')\nvar ClassList = require('class-list')\n\nvar w = typeof window === 'undefined' ? require('html-element') : window\nvar document = w.document\nvar Text = w.Text\n\nfunction context () {\n\n  var cleanupFuncs = []\n\n  function h() {\n    var args = [].slice.call(arguments), e = null\n    function item (l) {\n      var r\n      function parseClass (string) {\n        // Our minimal parser doesn’t understand escaping CSS special\n        // characters like `#`. Don’t use them. More reading:\n        // https://mathiasbynens.be/notes/css-escapes .\n\n        var m = split(string, /([\\.#]?[^\\s#.]+)/)\n        if(/^\\.|#/.test(m[1]))\n          e = document.createElement('div')\n        forEach(m, function (v) {\n          var s = v.substring(1,v.length)\n          if(!v) return\n          if(!e)\n            e = document.createElement(v)\n          else if (v[0] === '.')\n            ClassList(e).add(s)\n          else if (v[0] === '#')\n            e.setAttribute('id', s)\n        })\n      }\n\n      if(l == null)\n        ;\n      else if('string' === typeof l) {\n        if(!e)\n          parseClass(l)\n        else\n          e.appendChild(r = document.createTextNode(l))\n      }\n      else if('number' === typeof l\n        || 'boolean' === typeof l\n        || l instanceof Date\n        || l instanceof RegExp ) {\n          e.appendChild(r = document.createTextNode(l.toString()))\n      }\n      //there might be a better way to handle this...\n      else if (isArray(l))\n        forEach(l, item)\n      else if(isNode(l))\n        e.appendChild(r = l)\n      else if(l instanceof Text)\n        e.appendChild(r = l)\n      else if ('object' === typeof l) {\n        for (var k in l) {\n          if('function' === typeof l[k]) {\n            if(/^on\\w+/.test(k)) {\n              (function (k, l) { // capture k, l in the closure\n                if (e.addEventListener){\n                  e.addEventListener(k.substring(2), l[k], false)\n                  cleanupFuncs.push(function(){\n                    e.removeEventListener(k.substring(2), l[k], false)\n                  })\n                }else{\n                  e.attachEvent(k, l[k])\n                  cleanupFuncs.push(function(){\n                    e.detachEvent(k, l[k])\n                  })\n                }\n              })(k, l)\n            } else {\n              // observable\n              e[k] = l[k]()\n              cleanupFuncs.push(l[k](function (v) {\n                e[k] = v\n              }))\n            }\n          }\n          else if(k === 'style') {\n            if('string' === typeof l[k]) {\n              e.style.cssText = l[k]\n            }else{\n              for (var s in l[k]) (function(s, v) {\n                if('function' === typeof v) {\n                  // observable\n                  e.style.setProperty(s, v())\n                  cleanupFuncs.push(v(function (val) {\n                    e.style.setProperty(s, val)\n                  }))\n                } else\n                  var match = l[k][s].match(/(.*)\\W+!important\\W*$/);\n                  if (match) {\n                    e.style.setProperty(s, match[1], 'important')\n                  } else {\n                    e.style.setProperty(s, l[k][s])\n                  }\n              })(s, l[k][s])\n            }\n          } else if(k === 'attrs') {\n            for (var v in l[k]) {\n              e.setAttribute(v, l[k][v])\n            }\n          }\n          else if (k.substr(0, 5) === \"data-\") {\n            e.setAttribute(k, l[k])\n          } else {\n            e[k] = l[k]\n          }\n        }\n      } else if ('function' === typeof l) {\n        //assume it's an observable!\n        var v = l()\n        e.appendChild(r = isNode(v) ? v : document.createTextNode(v))\n\n        cleanupFuncs.push(l(function (v) {\n          if(isNode(v) && r.parentElement)\n            r.parentElement.replaceChild(v, r), r = v\n          else\n            r.textContent = v\n        }))\n      }\n\n      return r\n    }\n    while(args.length)\n      item(args.shift())\n\n    return e\n  }\n\n  h.cleanup = function () {\n    for (var i = 0; i < cleanupFuncs.length; i++){\n      cleanupFuncs[i]()\n    }\n    cleanupFuncs.length = 0\n  }\n\n  return h\n}\n\nvar h = module.exports = context()\nh.context = context\n\nfunction isNode (el) {\n  return el && el.nodeName && el.nodeType\n}\n\nfunction forEach (arr, fn) {\n  if (arr.forEach) return arr.forEach(fn)\n  for (var i = 0; i < arr.length; i++) fn(arr[i], i)\n}\n\nfunction isArray (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\n\n","import hh from 'hyperscript-helpers'\nimport h from 'hyperscript'\n\nconst { div, button } = hh(h)\n\nconst MSGS = {\n  ADD: 'ADD',\n  SUBTRACT: 'SUBTRACT'\n}\n\nfunction view(dispatch, model) {\n  return div({ className: 'container'}, [\n    div({ className: 'counter'},`Counter: ${model}`, [\n      div({ className: 'button-set'}, [\n        button({ onclick: () => dispatch(MSGS.ADD) }, '+'),\n        button({ onclick: () => dispatch(MSGS.SUBTRACT) }, '-')\n     ])\n    ])\n  ])\n}\n\nexport default view","// Remember!!!! The param is initModel!This takes care of rendering the initial state of my app!\nfunction app(initModel, updateState, view, node) {\n  let model = initModel // will hold my app state\n  let currentView = view(dispatch, model)\n  node.appendChild(currentView)\n \n  // hoisted. closure. in scope when I import it.\n  function dispatch(msg) { // when there's a UI interaction this will update my model/state then my view to reflect current state\n    model = updateState(msg, model)\n    const updatedView = view(dispatch, model)\n    node.replaceChild(updatedView, currentView)\n    currentView = updatedView\n  }\n}\n\nexport default app","// import { hello } from './hello'\nimport updateState from './UpdateState'\nimport initModel from './Model'\nimport view from './View'\nimport app from './App'\n\n// hello() // works! yay!\n// fix site.webmanifest!! Either fix the icon path array or delete it coz it's sometimes causing compile errors\nconst rootNode = document.getElementById('root')\n\napp(initModel, updateState, view, rootNode)\n\n\n"]}